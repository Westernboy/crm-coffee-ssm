<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <!--1.配置数据库相关参数
        properties的属性：通过${}来获取属性值
        -->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--在上面的配置中，通常你需要配置url、username、password，maxActive这三项。
          Druid会自动跟url识别驱动类名，如果连接的数据库非常见数据库，配置属性driverClassName
          asyncInit是1.1.4中新增加的配置，如果有initialSize数量较多时，打开会加快应用启动时间
          -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init"
          destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="filters" value="stat"/>
        <property name="maxActive" value="20"/>
        <property name="initialSize" value="1"/>
        <property name="maxWait" value="60000"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxOpenPreparedStatements" value="20"/>
        <property name="asyncInit" value="true"/>
    </bean>
    <!--3.配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置MyBatis全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="com.coffee.ssm.entity"/>
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <!-- 这句配置mapper配置文件的位置 如果采用注解的方式这句可以省去 -->
        <property name="mapperLocations" value="classpath:mappers/**/*.xml"/>
    </bean>
    <!--4  Mapper接口所在包名，Spring自动扫描 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:basePackage="com.coffee.ssm.mapper"
          p:sqlSessionFactoryBeanName="sqlSessionFactory"
    />
</beans>